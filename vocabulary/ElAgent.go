package vocabulary

/**
A delayed routine call, whose arguments may be open, partially closed or closed.
Generated by special reference to a routine, usually via a dedicated keyword,
such as 'lambda' or 'agent', or other special syntax. Instances may include
closed delayed calls like calculate_age (dob="1987-09-13", today="2019-06-03")
but also partially open calls such as format_structure (struct=?, style=3) ,
where struct is an open argument. Evaluation type (i.e. type of runtime
evaluated form) is BMM_SIGNATURE .
*/

// Interface definition
type IElAgent interface {
	IElFeatureRef
	//EvalType() IBmmRoutineType //effected //abstract//defined in IElFeatureRef
	IsCallable() bool
	Reference() string
	ClosedArgs() IElTuple
	SetClosedArgs(closedArgs IElTuple) error
	OpenArgs() []string
	SetOpenArgs(openArgs []string) error
	Definition() IBmmRoutine
	SetDefinition(definition IBmmRoutine) error
}

// Struct definition
type ElAgent struct {
	ElFeatureRef
	// Attributes
	// Closed arguments of a routine call as a tuple of objects.
	closedArgs IElTuple `yaml:"closedargs" json:"closedargs" xml:"closedargs"`
	/**
	Optional list of names of open arguments of the call. If not provided, and the
	name refers to a routine with more arguments than supplied in closed_args , the
	missing arguments are inferred from the definition .
	*/
	openArgs []string `yaml:"openargs" json:"openargs" xml:"openargs"`
	// Reference to definition of a routine for which this is an agent, if one exists.
	definition IBmmRoutine `yaml:"definition" json:"definition" xml:"definition"`
}

func (e *ElAgent) ClosedArgs() IElTuple {
	return e.closedArgs
}

func (e *ElAgent) SetClosedArgs(closedArgs IElTuple) error {
	e.closedArgs = closedArgs
	return nil
}

func (e *ElAgent) OpenArgs() []string {
	return e.openArgs
}

func (e *ElAgent) SetOpenArgs(openArgs []string) error {
	e.openArgs = openArgs
	return nil
}

func (e *ElAgent) Definition() IBmmRoutine {
	return e.definition
}

func (e *ElAgent) SetDefinition(definition IBmmRoutine) error {
	e.definition = definition
	return nil
}

// CONSTRUCTOR
//abstract, no constructor, no builder

//FUNCTIONS

// Post_result_validity : result = open_arguments = Void
// True if there are no open arguments.
func (e *ElAgent) IsCallable() bool {
	return false
}

// Generated full reference name, including scoping elements.
func (e *ElAgent) Reference() string {
	return ""
}
